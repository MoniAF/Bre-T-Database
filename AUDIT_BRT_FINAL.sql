CREATE TABLE USERS_AUDIT(
MODIFICATIONDATE DATE NOT NULL,
ACTION VARCHAR2(10) NOT NULL,
IDUSER NUMBER NOT NULL,
EMAIL VARCHAR2(40) NOT NULL,
PASSWORD VARCHAR2(20) NOT NULL
) TABLESPACE AUDIT_TS;

CREATE TABLE COMMENTARIES_AUDIT(
MODIFICATIONDATE DATE NOT NULL,
ACTION VARCHAR2(10) NOT NULL,
IDCOMMENTARY NUMBER NOT NULL,
USER_EMMITER VARCHAR2(100) NOT NULL,
COMMENTARY VARCHAR2(70) NOT NULL,
IDPROFILE NUMBER NOT NULL
) TABLESPACE AUDIT_TS;

CREATE TABLE PROFILES_AUDIT(
MODIFICATIONDATE DATE NOT NULL,
ACTION VARCHAR2(10) NOT NULL,
IDPROFILE NUMBER NOT NULL,
NAME VARCHAR2(100) NOT NULL,
PHONE_NUMBER INT NOT NULL,
IDUSER NUMBER NOT NULL
) TABLESPACE AUDIT_TS;

CREATE TABLE JOBS_AUDIT(
MODIFICATIONDATE DATE NOT NULL,
ACTION VARCHAR2(10) NOT NULL,
IDJOB NUMBER NOT NULL,
NAMEJOB VARCHAR2(80) NOT NULL,
COST DECIMAL(12,2) NOT NULL,
DESCRIPTION VARCHAR2(500) NOT NULL,
IDCATEGORY NUMBER NOT NULL
) TABLESPACE AUDIT_TS;

--TRIGGERS DE AUDITORIA

CREATE OR REPLACE TRIGGER AUDIT_USERS
AFTER INSERT OR DELETE OR UPDATE ON ADMIN_BRT.USERS
FOR EACH ROW
DECLARE
    V_TIPO_EVENTO VARCHAR(20);
BEGIN
    IF INSERTING THEN
        V_TIPO_EVENTO := 'INSERT';
        INSERT INTO USERS_AUDIT VALUES (SYSDATE, V_TIPO_EVENTO, :NEW.IDUSER, :NEW.EMAIL, :NEW.PASSWORD);
    ELSIF UPDATING THEN
        V_TIPO_EVENTO := 'UPDATE';
        INSERT INTO USERS_AUDIT VALUES (SYSDATE, V_TIPO_EVENTO, :OLD.IDUSER, :OLD.EMAIL, :OLD.PASSWORD);
    ELSIF DELETING THEN
        V_TIPO_EVENTO := 'DELETE';
        INSERT INTO USERS_AUDIT VALUES (SYSDATE, V_TIPO_EVENTO, :OLD.IDUSER, :OLD.EMAIL, :OLD.PASSWORD);
    END IF;
END;

CREATE OR REPLACE TRIGGER AUDIT_COMMENTARIES
AFTER INSERT OR DELETE OR UPDATE ON ADMIN_BRT.COMMENTARIES
FOR EACH ROW
DECLARE
    V_TIPO_EVENTO VARCHAR(20);
BEGIN
    IF INSERTING THEN
        V_TIPO_EVENTO := 'INSERT';
        INSERT INTO COMMENTARIES_AUDIT VALUES (SYSDATE, V_TIPO_EVENTO, :NEW.IDCOMMENTARY, :NEW.USER_EMMITER, :NEW.COMMENTARY, :NEW.IDPROFILE);
    ELSIF UPDATING THEN
        V_TIPO_EVENTO := 'UPDATE';
        INSERT INTO COMMENTARIES_AUDIT VALUES (SYSDATE, V_TIPO_EVENTO, :OLD.IDCOMMENTARY, :OLD.USER_EMMITER, :OLD.COMMENTARY, :OLD.IDPROFILE);
    ELSIF DELETING THEN
        V_TIPO_EVENTO := 'DELETE';
        INSERT INTO COMMENTARIES_AUDIT VALUES (SYSDATE, V_TIPO_EVENTO, :OLD.IDCOMMENTARY, :OLD.USER_EMMITER, :OLD.COMMENTARY, :OLD.IDPROFILE);
    END IF;
END;

CREATE OR REPLACE TRIGGER AUDIT_PROFILES
AFTER INSERT OR DELETE OR UPDATE ON ADMIN_BRT.PROFILES
FOR EACH ROW
DECLARE
    V_TIPO_EVENTO VARCHAR(20);
BEGIN
    IF INSERTING THEN
        V_TIPO_EVENTO := 'INSERT';
        INSERT INTO PROFILES_AUDIT VALUES (SYSDATE, V_TIPO_EVENTO, :NEW.IDPROFILE, :NEW.NAME, :NEW.PHONE_NUMBER, :NEW.IDUSER);
    ELSIF UPDATING THEN
        V_TIPO_EVENTO := 'UPDATE';
        INSERT INTO PROFILES_AUDIT VALUES (SYSDATE, V_TIPO_EVENTO, :OLD.IDPROFILE, :OLD.NAME, :OLD.PHONE_NUMBER, :OLD.IDUSER);
    ELSIF DELETING THEN
        V_TIPO_EVENTO := 'DELETE';
        INSERT INTO PROFILES_AUDIT VALUES (SYSDATE, V_TIPO_EVENTO, :OLD.IDPROFILE, :OLD.NAME, :OLD.PHONE_NUMBER, :OLD.IDUSER);
    END IF;
END;

CREATE OR REPLACE TRIGGER AUDIT_JOBS
AFTER INSERT OR DELETE OR UPDATE ON ADMIN_BRT.JOBS
FOR EACH ROW
DECLARE
    V_TIPO_EVENTO VARCHAR(20);
BEGIN
    IF INSERTING THEN
        V_TIPO_EVENTO := 'INSERT';
        INSERT INTO JOBS_AUDIT VALUES (SYSDATE, V_TIPO_EVENTO, :NEW.IDJOB, :NEW.NAMEJOB, :NEW.COST, :NEW.DESCRIPTION, :NEW.IDCATEGORY);
    ELSIF UPDATING THEN
        V_TIPO_EVENTO := 'UPDATE';
        INSERT INTO JOBS_AUDIT VALUES (SYSDATE, V_TIPO_EVENTO, :OLD.IDJOB, :OLD.NAMEJOB, :OLD.COST, :OLD.DESCRIPTION, :OLD.IDCATEGORY);
    ELSIF DELETING THEN
        V_TIPO_EVENTO := 'DELETE';
        INSERT INTO JOBS_AUDIT VALUES (SYSDATE, V_TIPO_EVENTO, :OLD.IDJOB, :OLD.NAMEJOB, :OLD.COST, :OLD.DESCRIPTION, :OLD.IDCATEGORY);
    END IF;
END;


SELECT * FROM JOBS_AUDIT;
SELECT * FROM PROFILES_AUDIT;
SELECT * FROM USERS_AUDIT;
SELECT * FROM COMMENTARIES_AUDIT;




