CREATE TABLE CATEGORIES(
IDCATEGORY NUMBER NOT NULL PRIMARY KEY,
NAMECATEGORY VARCHAR2(20) NOT NULL,
IMAGE VARCHAR2(200) NOT NULL,
CREATION_DATE DATE NOT NULL
) TABLESPACE ADMINISTRATOR_TS;

CREATE TABLE JOBS(
IDJOB NUMBER NOT NULL PRIMARY KEY,
NAMEJOB VARCHAR2(80) NOT NULL,
COST DECIMAL(12,2) NOT NULL,
DESCRIPTION VARCHAR2(500) NOT NULL,
IDCATEGORY NUMBER NOT NULL,
CREATION_DATE DATE NOT NULL
) TABLESPACE ADMINISTRATOR_TS;

CREATE TABLE TBL_PROFILE_JOBS(
IDPROFILE NUMBER NOT NULL,
IDJOB NUMBER NOT NULL
) TABLESPACE ADMINISTRATOR_TS;

CREATE TABLE PROFILES(
IDPROFILE NUMBER PRIMARY KEY NOT NULL,
IMAGE VARCHAR2(200),
NAME VARCHAR2(100) NOT NULL,
PROVINCE VARCHAR(30) NOT NULL,
PHONE_NUMBER INT NOT NULL,
IDUSER NUMBER NOT NULL,
CREATION_DATE DATE NOT NULL
) TABLESPACE ADMINISTRATOR_TS;

CREATE TABLE USERS(
IDUSER NUMBER NOT NULL PRIMARY KEY,
EMAIL VARCHAR2(40) NOT NULL,
PASSWORD VARCHAR2(20) NOT NULL,
CREATION_DATE DATE NOT NULL
) TABLESPACE ADMINISTRATOR_TS;

CREATE TABLE COMMENTARIES(
IDCOMMENTARY NUMBER NOT NULL PRIMARY KEY,
USER_EMMITER VARCHAR2(100) NOT NULL,
COMMENTARY VARCHAR2(70) NOT NULL,
IDPROFILE NUMBER NOT NULL,
CREATION_DATE DATE NOT NULL
) TABLESPACE ADMINISTRATOR_TS;

    --PRIMARY KEYS 
    
    ALTER TABLE TBL_PROFILE_JOBS ADD
    CONSTRAINT PK_TBL_PROFILE_JOBS PRIMARY KEY(IDPROFILE, IDJOB);
    
    --FOREIGN KEYS
    
    ALTER TABLE PROFILES ADD
    CONSTRAINT  FK_PROFILES_USERS FOREIGN KEY(IDUSER)
    REFERENCES USERS(IDUSER);
    
    ALTER TABLE COMMENTARIES ADD
    CONSTRAINT  FK_COMMENTARIES_PROFILES FOREIGN KEY(IDPROFILE)
    REFERENCES PROFILES(IDPROFILE);
    
    ALTER TABLE TBL_PROFILE_JOBS ADD
    CONSTRAINT  FK_TBL_PROFILE_JOBS_PROFILES FOREIGN KEY(IDPROFILE)
    REFERENCES PROFILES(IDPROFILE);
    
    ALTER TABLE TBL_PROFILE_JOBS ADD
    CONSTRAINT  FK_TBL_PROFILE_JOBS_JOBS FOREIGN KEY(IDJOB)
    REFERENCES JOBS(IDJOB);
    
    ALTER TABLE JOBS ADD
    CONSTRAINT  FK_JOBS_CATEGORIES FOREIGN KEY(IDCATEGORY)
    REFERENCES CATEGORIES(IDCATEGORY);

--DATOS

--CATEGORIES
INSERT INTO CATEGORIES (IDCATEGORY, NAMECATEGORY, IMAGE, CREATION_DATE) VALUES (1, 'Tecnología', 'tecnologia.jpg', '2023-01-01');
INSERT INTO CATEGORIES (IDCATEGORY, NAMECATEGORY, IMAGE, CREATION_DATE) VALUES (2, 'Educación', 'educacion.jpg', '2023-01-02');
INSERT INTO CATEGORIES (IDCATEGORY, NAMECATEGORY, IMAGE, CREATION_DATE) VALUES (3, 'Salud', 'salud.jpg', '2023-01-03');
INSERT INTO CATEGORIES (IDCATEGORY, NAMECATEGORY, IMAGE, CREATION_DATE) VALUES (4, 'Diseño', 'diseno.jpg', '2023-01-04');
INSERT INTO CATEGORIES (IDCATEGORY, NAMECATEGORY, IMAGE, CREATION_DATE) VALUES (5, 'Finanzas', 'finanzas.jpg', '2023-01-05');
INSERT INTO CATEGORIES (IDCATEGORY, NAMECATEGORY, IMAGE, CREATION_DATE) VALUES (6, 'Ventas', 'ventas.jpg', '2023-01-06');
INSERT INTO CATEGORIES (IDCATEGORY, NAMECATEGORY, IMAGE, CREATION_DATE) VALUES (7, 'Ingeniería', 'ingenieria.jpg', '2023-01-07');
INSERT INTO CATEGORIES (IDCATEGORY, NAMECATEGORY, IMAGE, CREATION_DATE) VALUES (8, 'Medio Ambiente', 'medio_ambiente.jpg', '2023-01-08');
INSERT INTO CATEGORIES (IDCATEGORY, NAMECATEGORY, IMAGE, CREATION_DATE) VALUES (9, 'Marketing', 'marketing.jpg', '2023-01-09');
INSERT INTO CATEGORIES (IDCATEGORY, NAMECATEGORY, IMAGE, CREATION_DATE) VALUES (10, 'Recursos Humanos', 'rrhh.jpg', '2023-01-10');

--JOBS

--USERS
INSERT INTO USERS (IDUSER, EMAIL, PASSWORD, CREATION_DATE) VALUES (1, 'luis@example.com', 'contraseña1', '2023-01-31');
INSERT INTO USERS (IDUSER, EMAIL, PASSWORD, CREATION_DATE) VALUES (2, 'ana@example.com', 'contraseña2', '2023-02-01');
INSERT INTO USERS (IDUSER, EMAIL, PASSWORD, CREATION_DATE) VALUES (3, 'carlos@example.com', 'contraseña3', '2023-02-02');
INSERT INTO USERS (IDUSER, EMAIL, PASSWORD, CREATION_DATE) VALUES (4, 'maria@example.com', 'contraseña4', '2023-02-03');
INSERT INTO USERS (IDUSER, EMAIL, PASSWORD, CREATION_DATE) VALUES (5, 'laura@example.com', 'contraseña5', '2023-02-04');
INSERT INTO USERS (IDUSER, EMAIL, PASSWORD, CREATION_DATE) VALUES (6, 'juan@example.com', 'contraseña6', '2023-02-05');
INSERT INTO USERS (IDUSER, EMAIL, PASSWORD, CREATION_DATE) VALUES (7, 'sofia@example.com', 'contraseña7', '2023-02-06');
INSERT INTO USERS (IDUSER, EMAIL, PASSWORD, CREATION_DATE) VALUES (8, 'david@example.com', 'contraseña8', '2023-02-07');
INSERT INTO USERS (IDUSER, EMAIL, PASSWORD, CREATION_DATE) VALUES (9, 'paola@example.com', 'contraseña9', '2023-02-08');
INSERT INTO USERS (IDUSER, EMAIL, PASSWORD, CREATION_DATE) VALUES (10, 'javier@example.com', 'contraseña10', '2023-02-09');

--PROFILES
INSERT INTO PROFILES (IDPROFILE, IMAGE, NAME, PROVINCE, PHONE_NUMBER, IDUSER, CREATION_DATE) VALUES (1, 'perfil1.jpg', 'Luis Rodríguez', 'San José', 88888888, 1, '2023-01-21');
INSERT INTO PROFILES (IDPROFILE, IMAGE, NAME, PROVINCE, PHONE_NUMBER, IDUSER, CREATION_DATE) VALUES (2, 'perfil2.jpg', 'Ana Fernández', 'Alajuela', 77777777, 2, '2023-01-22');
INSERT INTO PROFILES (IDPROFILE, IMAGE, NAME, PROVINCE, PHONE_NUMBER, IDUSER, CREATION_DATE) VALUES (3, 'perfil3.jpg', 'Carlos Gutiérrez', 'Heredia', 66666666, 3, '2023-01-23');
INSERT INTO PROFILES (IDPROFILE, IMAGE, NAME, PROVINCE, PHONE_NUMBER, IDUSER, CREATION_DATE) VALUES (4, 'perfil4.jpg', 'María Navarro', 'Cartago', 55555555, 4, '2023-01-24');
INSERT INTO PROFILES (IDPROFILE, IMAGE, NAME, PROVINCE, PHONE_NUMBER, IDUSER, CREATION_DATE) VALUES (5, 'perfil5.jpg', 'Laura Chaves', 'Guanacaste', 44444444, 5, '2023-01-25');
INSERT INTO PROFILES (IDPROFILE, IMAGE, NAME, PROVINCE, PHONE_NUMBER, IDUSER, CREATION_DATE) VALUES (6, 'perfil6.jpg', 'Juan Solís', 'Puntarenas', 33333333, 6,'2023-01-26');
INSERT INTO PROFILES (IDPROFILE, IMAGE, NAME, PROVINCE, PHONE_NUMBER, IDUSER, CREATION_DATE) VALUES (7, 'perfil7.jpg', 'Sofía Rojas', 'Limón', 22222222, 7, '2023-01-27');
INSERT INTO PROFILES (IDPROFILE, IMAGE, NAME, PROVINCE, PHONE_NUMBER, IDUSER, CREATION_DATE) VALUES (8, 'perfil8.jpg', 'David Umaña', 'San José', 11111111, 8, '2023-01-28');
INSERT INTO PROFILES (IDPROFILE, IMAGE, NAME, PROVINCE, PHONE_NUMBER, IDUSER, CREATION_DATE) VALUES (9, 'perfil9.jpg', 'Paola Herrera', 'Heredia', 99999999, 9, '2023-01-29');
INSERT INTO PROFILES (IDPROFILE, IMAGE, NAME, PROVINCE, PHONE_NUMBER, IDUSER, CREATION_DATE) VALUES (10, 'perfil10.jpg', 'Javier Castro', 'Alajuela', 10101010, 10, '2023-01-30');

--COMMENTARIES
INSERT INTO COMMENTARIES (IDCOMMENTARY, USER_EMMITER, COMMENTARY, IDPROFILE, CREATION_DATE) VALUES (1, 'luis@example.com', 'Excelente perfil', 1, '2023-02-10');
INSERT INTO COMMENTARIES (IDCOMMENTARY, USER_EMMITER, COMMENTARY, IDPROFILE, CREATION_DATE) VALUES (2, 'ana@example.com', 'Buen trabajo', 2, '2023-02-11');
INSERT INTO COMMENTARIES (IDCOMMENTARY, USER_EMMITER, COMMENTARY, IDPROFILE, CREATION_DATE) VALUES (3, 'carlos@example.com', 'Muy capacitado', 3, '2023-02-12');
INSERT INTO COMMENTARIES (IDCOMMENTARY, USER_EMMITER, COMMENTARY, IDPROFILE, CREATION_DATE) VALUES (4, 'maria@example.com', 'Gran experiencia', 4, '2023-02-13');
INSERT INTO COMMENTARIES (IDCOMMENTARY, USER_EMMITER, COMMENTARY, IDPROFILE, CREATION_DATE) VALUES (5, 'laura@example.com', 'Buenas habilidades', 5, '2023-02-14');
INSERT INTO COMMENTARIES (IDCOMMENTARY, USER_EMMITER, COMMENTARY, IDPROFILE, CREATION_DATE) VALUES (6, 'juan@example.com', 'Recomendado', 6, '2023-02-15');
INSERT INTO COMMENTARIES (IDCOMMENTARY, USER_EMMITER, COMMENTARY, IDPROFILE, CREATION_DATE) VALUES (7, 'sofia@example.com', 'Muy profesional', 7, '2023-02-16');
INSERT INTO COMMENTARIES (IDCOMMENTARY, USER_EMMITER, COMMENTARY, IDPROFILE, CREATION_DATE) VALUES (8, 'david@example.com', 'Excelente persona', 8, '2023-02-17');
INSERT INTO COMMENTARIES (IDCOMMENTARY, USER_EMMITER, COMMENTARY, IDPROFILE, CREATION_DATE) VALUES (9, 'paola@example.com', 'Altamente recomendado', 9, '2023-02-18');
INSERT INTO COMMENTARIES (IDCOMMENTARY, USER_EMMITER, COMMENTARY, IDPROFILE, CREATION_DATE) VALUES (10, 'javier@example.com', 'Muy buen desempeño', 10, '2023-02-19');

--TBL_PROFILE_JOBS
INSERT INTO TBL_PROFILE_JOBS (IDPROFILE, IDJOB) VALUES (1, 1);
INSERT INTO TBL_PROFILE_JOBS (IDPROFILE, IDJOB) VALUES (2, 2);
INSERT INTO TBL_PROFILE_JOBS (IDPROFILE, IDJOB) VALUES (3, 3);
INSERT INTO TBL_PROFILE_JOBS (IDPROFILE, IDJOB) VALUES (4, 4);
INSERT INTO TBL_PROFILE_JOBS (IDPROFILE, IDJOB) VALUES (5, 5);
INSERT INTO TBL_PROFILE_JOBS (IDPROFILE, IDJOB) VALUES (6, 6);
INSERT INTO TBL_PROFILE_JOBS (IDPROFILE, IDJOB) VALUES (7, 7);
INSERT INTO TBL_PROFILE_JOBS (IDPROFILE, IDJOB) VALUES (8, 8);
INSERT INTO TBL_PROFILE_JOBS (IDPROFILE, IDJOB) VALUES (9, 9);
INSERT INTO TBL_PROFILE_JOBS (IDPROFILE, IDJOB) VALUES (10, 10);

--TRIGGERS

--GENERADOR DE ID EN AUTOMATICO PARA TODAS LAS TABLAS
CREATE OR REPLACE TRIGGER GENERADOR_IDCATEGORY
BEFORE INSERT ON CATEGORIES
FOR EACH ROW
DECLARE
    VULTIMOID NUMBER := 0;
BEGIN
    SELECT
    COUNT(IDCATEGORY)
    INTO VULTIMOID
    FROM CATEGORIES;
    
    :NEW.IDCATEGORY := VULTIMOID + 1;
END;

CREATE OR REPLACE TRIGGER GENERADOR_IDJOB
BEFORE INSERT ON JOBS
FOR EACH ROW
DECLARE
    VULTIMOID NUMBER := 0;
BEGIN
    SELECT
    COUNT(IDJOB)
    INTO VULTIMOID
    FROM JOBS;
    
    :NEW.IDJOB := VULTIMOID + 1;
END;

CREATE OR REPLACE TRIGGER GENERADOR_IDPROFILE
BEFORE INSERT ON PROFILES
FOR EACH ROW
DECLARE
    VULTIMOID NUMBER := 0;
BEGIN
    SELECT
    COUNT(IDPROFILE)
    INTO VULTIMOID
    FROM PROFILES;
    
    :NEW.IDPROFILE := VULTIMOID + 1;
END;

CREATE OR REPLACE TRIGGER GENERADOR_IDUSER
BEFORE INSERT ON USERS
FOR EACH ROW
DECLARE
    VULTIMOID NUMBER := 0;
BEGIN
    SELECT
    COUNT(IDUSER)
    INTO VULTIMOID
    FROM USERS;
    
    :NEW.IDUSER := VULTIMOID + 1;
END;

CREATE OR REPLACE TRIGGER GENERADOR_IDCOMMENTARY
BEFORE INSERT ON COMMENTARIES
FOR EACH ROW
DECLARE
    VULTIMOID NUMBER := 0;
BEGIN
    SELECT
    COUNT(IDCOMMENTARY)
    INTO VULTIMOID
    FROM COMMENTARIES;
    
    :NEW.IDCOMMENTARY := VULTIMOID + 1;
END;

--REVISAR QUE EL EMAIL QUE SE ESTÁ AGREGANDO NO ESTÉ REGISTRADO
CREATE OR REPLACE TRIGGER VERIFY_EMAIL
BEFORE INSERT OR UPDATE ON USERS
FOR EACH ROW
DECLARE
    CURSOR CDATOS IS
        SELECT
        EMAIL
        FROM USERS;
BEGIN
    FOR i IN CDATOS LOOP
        IF :NEW.EMAIL = i.EMAIL THEN
            RAISE_APPLICATION_ERROR(-20325, 'EL EMAIL YA PERTENECE A UN USUARIO REGISTRADO');
        END IF;
    END LOOP;
END;

--GENERACION DE DESCRIPCIÓN AUTOMATICA SI ESTA VACÍA
CREATE OR REPLACE TRIGGER CHECK_JOBS_DESCRIPTION
BEFORE INSERT ON JOBS
FOR EACH ROW
BEGIN
    IF :NEW.DESCRIPTION = '' THEN
        INSERT INTO JOBS VALUES (:NEW.IDJOB, :NEW.NAMEJOB, :NEW.COST, 'DEFAULT DESCRIPTION', :NEW.IDCATEGORYM, :NEW.CREATION_DATE);
    ELSE 
        INSERT INTO JOBS VALUES (:NEW.IDJOB, :NEW.NAMEJOB, :NEW.COST, :NEW.DESCRIPTION, :NEW.IDCATEGORYM, :NEW.CREATION_DATE);
    END IF;
END;

